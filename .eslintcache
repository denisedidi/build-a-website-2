[{"C:\\Users\\Lenovo\\onedrive\\desktop\\build-a-website-2\\src\\index.js":"1","C:\\Users\\Lenovo\\onedrive\\desktop\\build-a-website-2\\src\\App.js":"2","C:\\Users\\Lenovo\\onedrive\\desktop\\build-a-website-2\\src\\containers\\Home.js":"3","C:\\Users\\Lenovo\\onedrive\\desktop\\build-a-website-2\\src\\components\\Header.js":"4","C:\\Users\\Lenovo\\onedrive\\desktop\\build-a-website-2\\src\\components\\WeatherImage.js":"5","C:\\Users\\Lenovo\\onedrive\\desktop\\build-a-website-2\\src\\components\\City.js":"6","C:\\Users\\Lenovo\\onedrive\\desktop\\build-a-website-2\\src\\containers\\Details.js":"7"},{"size":261,"mtime":1609137679621,"results":"8","hashOfConfig":"9"},{"size":513,"mtime":1609405298196,"results":"10","hashOfConfig":"9"},{"size":2507,"mtime":1609474957890,"results":"11","hashOfConfig":"9"},{"size":408,"mtime":1609238931316,"results":"12","hashOfConfig":"9"},{"size":930,"mtime":1609476765474,"results":"13","hashOfConfig":"9"},{"size":732,"mtime":1609479381573,"results":"14","hashOfConfig":"9"},{"size":2795,"mtime":1609476621400,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1n8r6et",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"C:\\Users\\Lenovo\\onedrive\\desktop\\build-a-website-2\\src\\index.js",[],["33","34"],"C:\\Users\\Lenovo\\onedrive\\desktop\\build-a-website-2\\src\\App.js",[],"C:\\Users\\Lenovo\\onedrive\\desktop\\build-a-website-2\\src\\containers\\Home.js",["35"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport City from \"../components/City\";\r\n\r\nfunction Home() {\r\n  const [cities, setCities] = useState([\r\n    {\r\n      name: \"Jakarta\",\r\n      currentTemp: \"0\",\r\n      weatherType: \"\",\r\n      color: \"bg-yellow-500\",\r\n    },\r\n    {\r\n      name: \"Bandung\",\r\n      currentTemp: \"0\",\r\n      weatherType: \"\",\r\n      color: \"bg-red-500\",\r\n    },\r\n    {\r\n      name: \"Malang\",\r\n      currentTemp: \"0\",\r\n      weatherType: \"\",\r\n      color: \"bg-blue-500\",\r\n    },\r\n    {\r\n      name: \"Taoyuan\",\r\n      currentTemp: \"0\",\r\n      weatherType: \"\",\r\n      color: \"bg-blue-500\",\r\n    },\r\n    // {\r\n    //   name: \"New York\",\r\n    //   currentTemp: \"0\",\r\n    //   weatherType: \"\",\r\n    //   color: \"bg-blue-500\",\r\n    // },\r\n    // {\r\n    //   name: \"Tokyo\",\r\n    //   currentTemp: \"0\",\r\n    //   weatherType: \"\",\r\n    //   color: \"bg-blue-500\",\r\n    // },\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    updateAllWeatherData();\r\n  }, []);\r\n// Fetch the weather data for 1 city\r\n  async function fetchWeatherData(cityName) {\r\n    const res = await axios\r\n      .get(\r\n        `https://api.openweathermap.org/data/2.5/weather?q=${cityName}&units=metric&appid=${process.env.REACT_APP_WEATHER_API}`\r\n      )\r\n      .then(function (response) {\r\n        // Successful request\r\n        const weather = response.data;\r\n        return weather;\r\n      })\r\n      .catch(function (error) {\r\n        // The best practice of coding is to not use console.log\r\n        console.warn(error);\r\n      });\r\n\r\n    return res;\r\n  }\r\n\r\n  // update the list data\r\n  async function updateAllWeatherData(params) {\r\n    cities.forEach(function (citiesItems, index) {\r\n      let weatherData = {};\r\n      let newCities = [...cities];\r\n\r\n      fetchWeatherData(citiesItems.name).then((res) => {\r\n        weatherData = res;\r\n\r\n        newCities[index].currentTemp = weatherData.main.temp;\r\n        newCities[index].weatherType = weatherData.weather[0].main;\r\n        setCities(newCities);\r\n      });\r\n    });\r\n  }\r\n\r\nreturn (\r\n    // Container\r\n    <div className=\"flex flex-col h-screen bg-green-100\">\r\n      <div className=\"text-4xl text-yellow-500 font-semibold text-center my-4\">\r\n        Our Weather App\r\n      </div>\r\n\r\n      {cities.map((item, index) => (\r\n        <City\r\n          cityName={item.name}\r\n          weatherType={item.weatherType}\r\n          temp={item.currentTemp}\r\n          color={item.color}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\Lenovo\\onedrive\\desktop\\build-a-website-2\\src\\components\\Header.js",[],["36","37"],"C:\\Users\\Lenovo\\onedrive\\desktop\\build-a-website-2\\src\\components\\WeatherImage.js",[],"C:\\Users\\Lenovo\\onedrive\\desktop\\build-a-website-2\\src\\components\\City.js",[],"C:\\Users\\Lenovo\\onedrive\\desktop\\build-a-website-2\\src\\containers\\Details.js",[],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":48,"column":6,"nodeType":"44","endLine":48,"endColumn":8,"suggestions":"45"},{"ruleId":"38","replacedBy":"46"},{"ruleId":"40","replacedBy":"47"},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'updateAllWeatherData'. Either include it or remove the dependency array.","ArrayExpression",["50"],["48"],["49"],"no-global-assign","no-unsafe-negation",{"desc":"51","fix":"52"},"Update the dependencies array to be: [updateAllWeatherData]",{"range":"53","text":"54"},[987,989],"[updateAllWeatherData]"]